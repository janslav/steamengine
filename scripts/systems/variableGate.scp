//////////////////////////////////////////////////
////////    V a r i a  b l e   G a t e    ////////
////////          (c) Yavanna             ////////
//////////////////////////////////////////////////
//  Bits:
// 1: isExpgate
// 2: 
// 3: 

[ItemDef i_varGate]
NAME=Brana
ID=i_moongate_blue
TYPE=t_varGate
CATEGORY=Questy
SUBSECTION=Brana portujici jen dany lvl
DESCRIPTION=Brana

ON=@Create
tag(gateFlags,0)

[Dialog d_varGate]
argo.SetLocation=15,5

argo.tag(sirka,760)
argo.tag(vyska,470)
argo.dialog_prvni
argo.dialog_pozadi(<argo.tag(nexty)>,1,365,200,130,30)
argo.dialog_pozadi(<argo.tag(nexty)>,6,30,332,200,130,30)
argo.dialog_pozadi(<argo.tag(nexty)>,1)
argo.dialog_pozadi(<argo.tag(nexty)>,6,30,332,200,130,30)
argo.dialog_pozadi(<argo.tag(nexty)>,1)
argo.dialog_pozadi(<argo.tag(nexty)>,6,30,332,200,130,30)

argo.dialog_zpruhledni
argo.textA(<argo.dialog_textpos(0,0)>,42,"Variable Gate")
argo.textA(<argo.dialog_textpos(0,2)>,<d_def_writecolor>,"MoreP:")
argo.textA(<argo.dialog_textpos(0,3)>,<d_def_readcolor>,"<?moreP?>")
argo.dialog_textpos(0,4)

argo.button(<lastxpos>-4,<lastypos>-2,0fa5,0fa7,1,0,2)		//set moreP
//		F L A G S :		//
//	NPC Go Through:
argo.dialog_textpos(1,0)
argo.checkBox(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_npcGoThrough>,1)
argo.dialog_textpos(1,1)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,<d_def_readcolor>,"NPCs can go through.")

//	Hypno Go Through:
argo.dialog_textpos(1,0)
argo.checkBox(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_hypnoGoThrough>,2)
argo.dialog_textpos(1,1)
argo.textA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,<d_def_readcolor>,"Hypnotized NPCs can go through.")

//	Ghost Go Through
argo.dialog_textpos(1,0)
argo.checkBox(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_ghostCanGoThrough>,3)
argo.dialog_textpos(1,1)
argo.textA(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,<d_def_readcolor>,"Ghosts can go through the gate.")

//	Is Exp Gate:
argo.dialog_textpos(1,0)
argo.checkBox(<lastxpos>,<lastypos>+3*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_isExpGate>,4)
argo.dialog_textpos(1,1)
argo.textA(<lastxpos>,<lastypos>+3*<d_def_radek_vyska>,<d_def_readcolor>,"This is ExpGate.")
argo.dialog_textpos(1,2)
argo.textA(<lastxpos>,<lastypos>+3*<d_def_radek_vyska>,<d_def_writecolor>,"Experience 'exp, time/min' :")
argo.dialog_textpos(1,3)
if (strLen(<tag(expToGive)>))
  argo.setText(1000,"<?tag(expToGive)?>")
else
  argo.setText(1000,"0,0")
endif
argo.textEntryA(<lastxpos>,<lastypos>+3*<d_def_radek_vyska>,125,<d_def_radek_vyska>,52,100,1000)

//	Specific Level Required:
argo.dialog_textpos(1,0)
argo.checkBox(<lastxpos>,<lastypos>+4*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_reqLevel>,5)
argo.dialog_textpos(1,1)
argo.textA(<lastxpos>,<lastypos>+4*<d_def_radek_vyska>,<d_def_readcolor>,"Specific level is required.")
argo.dialog_textpos(1,2)
argo.textA(<lastxpos>,<lastypos>+4*<d_def_radek_vyska>,<d_def_writecolor>,"Level 'min' or 'min, max' :")
argo.dialog_textpos(1,3)
if (strLen(<tag(reqLevel)>))
  argo.setText(1100,"<?tag(reqLevel)?>")
else
  argo.setText(1100,"0,0")
endif
argo.textEntryA(<lastxpos>,<lastypos>+4*<d_def_radek_vyska>,125,<d_def_radek_vyska>,52,101,1100)



//	RemoveMenu:
argo.textA(<argo.dialog_textpos(2,0)>,<d_def_writecolor>,"RemoveMenu:")

//	Remove Cursor:
argo.dialog_textpos(3,0)
argo.checkBox(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_removeCursor>,6)
argo.dialog_textpos(3,1)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,<d_def_readcolor>,"Remove Cursor.")

//	Remove PVP tools, except for weapons and armor
argo.dialog_textpos(3,0)
argo.checkBox(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_removePVPTools>,7)
argo.dialog_textpos(3,1)
argo.textA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,<d_def_readcolor>,"Remove PVP tools except weapons and armor.")

//	Remove mount
argo.dialog_textpos(3,0)
argo.checkBox(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_removeMount>,8)
argo.dialog_textpos(3,1)
argo.textA(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,<d_def_readcolor>,"Remove horse.")

//	Remove bank box
argo.dialog_textpos(3,0)
argo.checkBox(<lastxpos>,<lastypos>+3*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_removeBank>,9)
argo.dialog_textpos(3,1)
argo.textA(<lastxpos>,<lastypos>+3*<d_def_radek_vyska>,<d_def_readcolor>,"Remove bank box.")

//	Remove Menu
argo.dialog_textpos(3,0)
argo.checkBox(<lastxpos>,<lastypos>+4*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_removeItem>,10)
argo.dialog_textpos(3,1)
argo.textA(<lastxpos>,<lastypos>+4*<d_def_radek_vyska>,<d_def_readcolor>,"Remove Object menu.")
argo.dialog_textpos(3,2)
argo.textA(<lastxpos>,<lastypos>+4*<d_def_radek_vyska>,<d_def_readcolor>,"Number of Items/Events:")
argo.dialog_textpos(3,3)
argo.textA(<lastxpos>,<lastypos>+4*<d_def_radek_vyska>,<d_def_readcolor>,"<?eval tag(remItemsCount)?>")
argo.dialog_textpos(3,4)
argo.button(<lastxpos>-4,<lastypos>+4*<d_def_radek_vyska>,0fbd,0fbf,1,0,4)	//Remove Item Menu




//	AddMenu:
argo.textA(<argo.dialog_textpos(4,0)>,<d_def_writecolor>,"AddMenu:")

//	Add Object Menu
argo.dialog_textpos(5,0)
argo.checkBox(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_addItem>,11)
argo.dialog_textpos(5,1)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,<d_def_readcolor>,"Add Object menu.")
argo.dialog_textpos(5,2)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,<d_def_readcolor>,"Number of Items/Events:")
argo.dialog_textpos(5,3)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,<d_def_readcolor>,"<?eval tag(addItemsCount)?>")
argo.dialog_textpos(5,4)
argo.button(<lastxpos>-4,<lastypos>+0*<d_def_radek_vyska>,0fbd,0fbf,1,0,5)	//Add Item Menu

//	Add Object Menu
argo.dialog_textpos(5,0)
argo.checkBox(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_addFunction>,12)
argo.dialog_textpos(5,1)
argo.textA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,<d_def_readcolor>,"Add Function menu.")
argo.dialog_textpos(5,2)
argo.textA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,<d_def_readcolor>,"Number of Functions:")
argo.dialog_textpos(5,3)
argo.textA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,<d_def_readcolor>,"<?eval tag(addFunctionsCount)?>")
argo.dialog_textpos(5,4)
argo.button(<lastxpos>-4,<lastypos>+1*<d_def_radek_vyska>,0fbd,0fbf,1,0,6)	//Add Function Menu

// Add Guards Menu
argo.dialog_textpos(5,0)
argo.checkBox(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,210,211,<tag.gateFlags>&<vg_isGuarded>,13)
argo.dialog_textpos(5,1)
argo.textA(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,<d_def_readcolor>,"Add Guards menu.")
argo.dialog_textpos(5,2)
argo.textA(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,<d_def_readcolor>,"Number of Spawns:")
argo.dialog_textpos(5,3)
argo.textA(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,<d_def_readcolor>,"<?eval tag(pocetSpawnu)?>")
argo.dialog_textpos(5,4)
argo.button(<lastxpos>-4,<lastypos>+2*<d_def_radek_vyska>,0fbd,0fbf,1,0,7)	//Add Guards Menu




argo.button(<d_def_okraj>+<d_def_skvira>,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb7,0fb9,1,0,1)		//ok
argo.button(<d_def_okraj>+<d_def_skvira>+33,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb1,0fb3,1,0,0)	//cancel




[Dialog d_varGate button]
on=0
src.sysMessage("Nastaveni nebylo ulozeno.")

on=@AnyButton	// OK
if (<argChk(1)>)	//npcs can go through
  tag.gateFlags=<tag.gateFlags>|<vg_npcGoThrough>	// add npcGoThrough flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_npcGoThrough>	// del npcGoThrough flag
endif

if (<argChk(2)>)	//hypnotized npcs can go through
  tag.gateFlags=<tag.gateFlags>|<vg_hypnoGoThrough>	// add hypnoGoThrough flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_hypnoGoThrough>	// del hypnoGoThrough flag
endif

if (<argChk(3)>)	//ghosts can go through
  tag.gateFlags=<tag.gateFlags>|<vg_ghostCanGoThrough>	// add ghostCanGoThrough flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_ghostCanGoThrough>		// del ghostCanGoThrough flag
endif

if (<argChk(4)>)	//is ExpGate
  tag.gateFlags=<tag.gateFlags>|<vg_isExpGate>		// add isExpGate flag
  tag(expToGive,<argTxt(100)>)
else
  tag.gateFlags=<tag.gateFlags>&~<vg_isExpGate>		// del isExpGate flag
endif

if (<argChk(5)>)	//specific level is required
  tag.gateFlags=<tag.gateFlags>|<vg_reqLevel>
  tag(reqLevel,"<argTxt(101)>")
else
  tag.gateFlags=<tag.gateFlags>&~<vg_reqLevel>
endif

if (<argChk(6)>)	//remove cursor
  tag.gateFlags=<tag.gateFlags>|<vg_removeCursor>	// add removeCursor flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_removeCursor>	// del removeCursor flag
endif

if (<argChk(7)>)	//remove PVP Tools
  tag.gateFlags=<tag.gateFlags>|<vg_removePVPTools>	// add removePVPTools flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_removePVPTools>	// del removePVPTools flag
endif

if (<argChk(8)>)	//remove horse
  tag.gateFlags=<tag.gateFlags>|<vg_removeMount>	// add removeMount flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_removeMount>	// del removeMount flag
endif

if (<argChk(9)>)	//remove bank box
  tag.gateFlags=<tag.gateFlags>|<vg_removeBank>		// add removeBank flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_removeBank>	// del removeBank flag
endif

if (<argChk(10)>)	//remove item
  tag.gateFlags=<tag.gateFlags>|<vg_removeItem>		// add removeItem flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_removeItem>	// del removeItem flag
endif

if (<argChk(11)>)	//add item
  tag.gateFlags=<tag.gateFlags>|<vg_addItem>		// add addItem flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_addItem>		// del addItem flag
endif

if (<argChk(12)>)	//add function
  tag.gateFlags=<tag.gateFlags>|<vg_addFunction>		// add addFunction flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_addFunction>		// del addFunction flag
endif

if (<argChk(13)>)	//add guards
  tag.gateFlags=<tag.gateFlags>|<vg_isGuarded>		// add guards flag
else
  tag.gateFlags=<tag.gateFlags>&~<vg_isGuarded>		// del guards flag
endif


if (argn == 2)	//pressed button 2
  moreP=<src.p>
  dialog(d_varGate)
  return 1
endif

if (argn == 4)  //pressed button 4
  if !(0<tag(remItemsCount)>)
    tag(remItemsCount,0)
  endif
  dialog(d_varGate_advRemoveItem)
  return 1
endif

if (argn == 5)	//pressed button 5
  if !(0<tag(addItemsCount)>)
    tag(addItemsCount,0)
  endif
  dialog(d_varGate_advAddItem)
  return 1
endif

if (argn == 6)	//pressed button 6
  if !(0<tag(addFunctionsCount)>)
    tag(addFunctionsCount,0)
  endif
  dialog(d_varGate_advAddFunction)
  return 1
endif

if (argn == 7) //pressed button 7
  dialog(d_guarditAdv,d_varGate)
  return 1
endif


[Dialog d_varGate_advRemoveItem]
argo.SetLocation=15,5

argo.tag(sirka,673)
argo.tag(vyska,120+<tag(remItemsCount)>*<d_def_radek_vyska>)
argo.dialog_prvni
argo.dialog_pozadi(<argo.tag(nexty)>,1)
argo.dialog_pozadi(<argo.tag(nexty)>,1,30)
argo.dialog_pozadi(<argo.tag(nexty)>,1,30,100,250,80,60,80,30)
argo.dialog_pozadi(<argo.tag(nexty)>,<tag(remItemsCount)>,30,100,250,80,60,80,30)
argo.dialog_zpruhledni

argo.textA(<argo.dialog_textpos(0,0)>,42,"Variable Gate - Remove an Object Menu")
argo.dialog_textpos(1,0)
argo.button(<lastxpos>-4,<lastypos>,0fbd,0fbf,1,0,2)		//set Item to remove - dialog
argo.textA(<argo.dialog_textpos(1,1)>,<d_def_writecolor>,"Add a new Object To the Removing group")

argo.textA(<argo.dialog_textpos(2,1)>,<d_def_readcolor>,"Item number:")
argo.textA(<argo.dialog_textpos(2,2)>,<d_def_readcolor>,"Item ID/Type/Event:")
argo.textA(<argo.dialog_textpos(2,3)>,<d_def_readcolor>,"Count")
argo.textA(<argo.dialog_textpos(2,4)>,<d_def_readcolor>,"Go")
argo.textA(<argo.dialog_textpos(2,5)>,<d_def_readcolor>,"ID/Event")
argo.textA(<argo.dialog_textpos(2,6)>,<d_def_readcolor>,"Del")

arg(i,0)
while (<arg(i)> < <tag(remItemsCount)>)
  argo.dialog_textpos(3,0)
  argo.f_varGate_compileItemTag(<tag(itemToRemove_<eval arg(i)>)>)
  argo.button(<lastxpos>-4,<lastypos>+<arg(i)>*<d_def_radek_vyska>,0fb4,0fb6,1,0,100+<arg(i)>)		//edit Item to remove - dialog
  argo.dialog_textpos(3,1)
  argo.textA(<lastxpos>,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"Item <eval arg(i)> :")
  argo.dialog_textpos(3,2)
  argo.textA(<lastxpos>,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"<?argo.tag(itID)?>")
  argo.dialog_textpos(3,3)
  argo.textA(<lastxpos>,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"<?eval argo.tag(itCount)?>")
  argo.dialog_textpos(3,4)
  argo.textA(<lastxpos>+23,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"<?eval argo.tag(itGo)?>")
  argo.dialog_textpos(3,5)
  argo.textA(<lastxpos>+30,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"<?eval argo.tag(itDef)?>")
  argo.dialog_textpos(3,6)
  argo.button(<lastxpos>-4,<lastypos>+<arg(i)>*<d_def_radek_vyska>,0fb1,0fb3,1,0,1000+<arg(i)>)		//edit Item to remove - dialog
  arg(i,#+1)
endwhile

argo.button(<d_def_okraj>+<d_def_skvira>,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb7,0fb9,1,0,1)		//ok
argo.button(<d_def_okraj>+<d_def_skvira>+33,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb1,0fb3,1,0,0)	//cancel

[Dialog d_varGate_advRemoveItem button]
on=0
dialog(d_varGate)

on=1	// apply changes
dialog(d_varGate)

on=2	// set Item to remove dialog
dialog(d_varGate_setRemovingItem)

on=@anyButton
if (<argn> >= 1000)
  arg(itemNumber,<eval argn-1000>)
  while (<arg(itemNumber)> < <eval <tag(remItemsCount)>-1>)
    tag(itemToRemove_<eval itemNumber>,<tag(itemToRemove_<eval itemNumber+1>)>)
    arg(itemNumber,#+1)
  endwhile
  tag(remItemsCount,<eval <tag(remItemsCount)>-1>)
  tag.remove(itemToRemove_<eval itemNumber>)
  dialog(d_varGate_advRemoveItem)
elseif (<argn> >= 100)
  arg(itemNumber,<eval argn-100>)
  dialog(d_varGate_setRemovingItem,<tag(itemToRemove_<eval arg(itemNumber)>)>,<itemNumber>)
endif

[Dialog d_varGate_advAddItem]
argo.SetLocation=15,5

argo.tag(sirka,610)
argo.tag(vyska,120+<tag(addItemsCount)>*<d_def_radek_vyska>)
argo.dialog_prvni
argo.dialog_pozadi(<argo.tag(nexty)>,1)
argo.dialog_pozadi(<argo.tag(nexty)>,1,30)
argo.dialog_pozadi(<argo.tag(nexty)>,1,30,100,250,80,80,30)
argo.dialog_pozadi(<argo.tag(nexty)>,<tag(addItemsCount)>,30,100,250,80,80,30)
argo.dialog_zpruhledni

argo.textA(<argo.dialog_textpos(0,0)>,42,"Variable Gate - Add an Object Menu")
argo.dialog_textpos(1,0)
argo.button(<lastxpos>-4,<lastypos>,0fbd,0fbf,1,0,2)		//set Item to add - dialog
argo.textA(<argo.dialog_textpos(1,1)>,<d_def_writecolor>,"Add a new Object to the Adding group")

argo.textA(<argo.dialog_textpos(2,1)>,<d_def_readcolor>,"Item number:")
argo.textA(<argo.dialog_textpos(2,2)>,<d_def_readcolor>,"Item ID/Event Name:")
argo.textA(<argo.dialog_textpos(2,3)>,<d_def_readcolor>,"Count")
argo.textA(<argo.dialog_textpos(2,4)>,<d_def_readcolor>,"ID/Event")
argo.textA(<argo.dialog_textpos(2,5)>,<d_def_readcolor>,"Del")

arg(i,0)
while (<arg(i)> < <tag(addItemsCount)>)
  argo.dialog_textpos(3,0)
  argo.f_varGate_compileItemTag(<tag(itemToAdd_<eval arg(i)>)>)
  argo.button(<lastxpos>-4,<lastypos>+<arg(i)>*<d_def_radek_vyska>,0fb4,0fb6,1,0,100+<arg(i)>)		//edit Item to Add - dialog
  argo.dialog_textpos(3,1)
  argo.textA(<lastxpos>,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"Item <eval arg(i)> :")
  argo.dialog_textpos(3,2)
  argo.textA(<lastxpos>,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"<?argo.tag(itID)?>")
  argo.dialog_textpos(3,3)
  argo.textA(<lastxpos>,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"<?eval argo.tag(itCount)?>")
  argo.dialog_textpos(3,4)
  argo.textA(<lastxpos>+30,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"<?eval argo.tag(itDef)?>")
  argo.dialog_textpos(3,5)
  argo.button(<lastxpos>-4,<lastypos>+<arg(i)>*<d_def_radek_vyska>,0fb1,0fb3,1,0,1000+<arg(i)>)		//edit Item to Add - dialog
  arg(i,#+1)
endwhile

argo.button(<d_def_okraj>+<d_def_skvira>,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb7,0fb9,1,0,1)		//ok
argo.button(<d_def_okraj>+<d_def_skvira>+33,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb1,0fb3,1,0,0)	//cancel

[Dialog d_varGate_advAddItem button]
on=0
dialog(d_varGate)

on=1	// apply changes
dialog(d_varGate)

on=2	// set Item to Add dialog
dialog(d_varGate_setAddingItem)

on=@anyButton
if (<argn> >= 1000)
  arg(itemNumber,<eval argn-1000>)
  while (<arg(itemNumber)> < <eval <tag(addItemsCount)>-1>)
    tag(itemToAdd_<eval itemNumber>,<tag(itemToAdd_<eval itemNumber+1>)>)
    arg(itemNumber,#+1)
  endwhile
  tag(addItemsCount,<eval <tag(addItemsCount)>-1>)
  tag.remove(itemToAdd_<eval itemNumber>)
  dialog(d_varGate_advAddItem)
elseif (<argn> >= 100)
  arg(itemNumber,<eval argn-100>)
  dialog(d_varGate_setAddingItem,<tag(itemToAdd_<eval arg(itemNumber)>)>,<itemNumber>)
endif


[Dialog d_varGate_advAddFunction]
argo.SetLocation=15,5

argo.tag(sirka,527)
argo.tag(vyska,120+<tag(addFunctionsCount)>*<d_def_radek_vyska>)
argo.dialog_prvni
argo.dialog_pozadi(<argo.tag(nexty)>,1)
argo.dialog_pozadi(<argo.tag(nexty)>,1,30)
argo.dialog_pozadi(<argo.tag(nexty)>,1,30,100,250,80,30)
argo.dialog_pozadi(<argo.tag(nexty)>,<tag(addFunctionsCount)>,30,100,250,80,30)
argo.dialog_zpruhledni

argo.textA(<argo.dialog_textpos(0,0)>,42,"Variable Gate - Add Object Menu")
argo.dialog_textpos(1,0)
argo.button(<lastxpos>-4,<lastypos>,0fbd,0fbf,1,0,2)		//set Function to add - dialog
argo.textA(<argo.dialog_textpos(1,1)>,<d_def_writecolor>,"Add a new Function to the group of functions")

argo.textA(<argo.dialog_textpos(2,1)>,<d_def_readcolor>,"Function number:")
argo.textA(<argo.dialog_textpos(2,2)>,<d_def_readcolor>,"Function Name:")
argo.textA(<argo.dialog_textpos(2,3)>,<d_def_readcolor>,"CanStop")
argo.textA(<argo.dialog_textpos(2,4)>,<d_def_readcolor>,"Del")

arg(i,0)
while (<arg(i)> < <tag(addFunctionsCount)>)
  argo.dialog_textpos(3,0)
  argo.f_varGate_compileItemTag(<tag(FunctionToAdd_<eval arg(i)>)>)
  argo.button(<lastxpos>-4,<lastypos>+<arg(i)>*<d_def_radek_vyska>,0fb4,0fb6,1,0,100+<arg(i)>)		//edit Function to Add - dialog
  argo.dialog_textpos(3,1)
  argo.textA(<lastxpos>,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"Function <eval arg(i)> :")
  argo.dialog_textpos(3,2)
  argo.textA(<lastxpos>,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"<?argo.tag(itID)?>")
  argo.dialog_textpos(3,3)
  argo.textA(<lastxpos>,<lastypos>+<arg(i)>*<d_def_radek_vyska>,<d_def_readcolor>,"<?eval argo.tag(itCount)?>")
  argo.dialog_textpos(3,4)
  argo.button(<lastxpos>-4,<lastypos>+<arg(i)>*<d_def_radek_vyska>,0fb1,0fb3,1,0,1000+<arg(i)>)		//edit Function to Add - dialog
  arg(i,#+1)
endwhile

argo.button(<d_def_okraj>+<d_def_skvira>,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb7,0fb9,1,0,1)		//ok
argo.button(<d_def_okraj>+<d_def_skvira>+33,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb1,0fb3,1,0,0)	//cancel

[Dialog d_varGate_advAddFunction button]
on=0
dialog(d_varGate)

on=1	// apply changes
dialog(d_varGate)

on=2	// set Function to Add dialog
dialog(d_varGate_setAddingFunction)

on=@anyButton
if (<argn> >= 1000)
  arg(functionNumber,<eval argn-1000>)
  while (<arg(functionNumber)> < <eval <tag(addFunctionsCount)>-1>)
    tag(functionToAdd_<eval functionNumber>,<tag(functionToAdd_<eval functionNumber+1>)>)
    arg(functionNumber,#+1)
  endwhile
  tag(addFunctionsCount,<eval <tag(addFunctionsCount)>-1>)
  tag.remove(functionToAdd_<eval functionNumber>)
  dialog(d_varGate_advAddFunction)
elseif (<argn> >= 100)
  arg(functionNumber,<eval argn-100>)
  dialog(d_varGate_setAddingFunction,<tag(functionToAdd_<eval arg(functionNumber)>)>,<functionNumber>)
endif




[Dialog d_varGate_setRemovingItem]
argo.SetLocation=15,40

argo.tag(sirka,920)
argo.tag(vyska,135)
argo.dialog_prvni
argo.dialog_pozadi(<argo.tag(nexty)>,1)
argo.dialog_pozadi(<argo.tag(nexty)>,3,150,250,30)
argo.dialog_zpruhledni
if (<argvcount> > 1)
  arg(editing,1)
  argo.tag(thisItem,<argv(4)>)
else
  arg(editing,0)
endif

argo.textA(<argo.dialog_textpos(0,0)>,42,"Variable Gate - Set Removing Item Menu")

argo.dialog_textpos(1,0)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,d_def_readcolor,"ItemID / Type:")
argo.dialog_textpos(1,3)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,d_def_readcolor,"Value determines, whether string is itemdef(0), typedef(1) or event(2).")

argo.dialog_textpos(1,0)
argo.textA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,d_def_readcolor,"Items Amount:")
argo.dialog_textpos(1,2)
if (<arg(editing)>)
  argo.checkBox(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,210,211,<argv(3)>,10)
else
  argo.checkBox(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,210,211,0,10)
endif
argo.dialog_textpos(1,3)
argo.textA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,d_def_readcolor,"Take this many items from player, put zero for removing everything.")
argo.textA(<lastxpos>,<lastypos>+2*<d_def_radek_vyska>,d_def_readcolor,"checkBox determines, if you can go through without enough items/event.")

if (<arg(editing)>)
  argo.setText(100,"<?argv(0)?>")
  argo.setText(101,"<?eval argv(1)?>")
  argo.setText(102,"<?eval argv(2)?>")
else
  argo.setText(100,"")
  argo.setText(101,"<?eval 0?>")
  argo.setText(102,"<?eval 0?>")
endif
argo.dialog_textpos(1,1)
argo.textEntryA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,250,<d_def_radek_vyska>,52,1,100)
argo.textEntryA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,250,<d_def_radek_vyska>,52,2,101)
argo.dialog_textpos(1,2)
argo.textEntryA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,15,<d_def_radek_vyska>,52,3,102)

if (<arg(editing)>)
  argo.button(<d_def_okraj>+<d_def_skvira>,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb7,0fb9,1,0,2)	//ok
else
  argo.button(<d_def_okraj>+<d_def_skvira>,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb7,0fb9,1,0,1)	//ok
endif
argo.button(<d_def_okraj>+<d_def_skvira>+33,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb1,0fb3,1,0,0)	//cancel

[Dialog d_varGate_setRemovingItem button]
on=0
dialog(d_varGate_advRemoveItem)

on=1	// apply changes
tag(itemToRemove_<eval <tag(remItemsCount)>>,"<argTxt(1)>,<eval argTxt(2)>,<eval argTxt(3)>,<eval argChk(10)>")	//ID, amount,ID/Type,GoThroughIfNotEnoughItems.
tag(remItemsCount,#+1)
dialog(d_varGate_advRemoveItem)

on=2
if (<argTxt(3)> < 0) || (<argTxt(3)> > 2)
  src.redMessage("Hodnota za jmenem odstranovaneho objektu musi byt v rozmezi 0-2 (Item,Type,Event)")
  dialog(d_varGate_setRemovingItem,<argTxt(1)>,<eval argTxt(2)>,<eval argTxt(3)>,<eval argChk(10)>)
else
  tag(itemToRemove_<eval <argo.tag(thisItem)>>,"<argTxt(1)>,<eval argTxt(2)>,<eval argTxt(3)>,<eval argChk(10)>")		//ID, amount,ID/Type,GoThroughIfNotEnoughItems.
  dialog(d_varGate_advRemoveItem)
endif



[Dialog d_varGate_setAddingItem]
argo.SetLocation=15,40

argo.tag(sirka,920)
argo.tag(vyska,112)
argo.dialog_prvni
argo.dialog_pozadi(<argo.tag(nexty)>,1)
argo.dialog_pozadi(<argo.tag(nexty)>,2,150,250,30)
argo.dialog_zpruhledni
if (<argvcount> > 1)
  arg(editing,1)
  argo.tag(thisItem,<argv(4)>)
else
  arg(editing,0)
endif

argo.textA(<argo.dialog_textpos(0,0)>,42,"Variable Gate - Set Adding Item Menu")

argo.dialog_textpos(1,0)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,d_def_readcolor,"ItemID / Event:")
argo.dialog_textpos(1,3)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,d_def_readcolor,"Value determines, whether string is itemdef(0) or event(1).")

argo.dialog_textpos(1,0)
argo.textA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,d_def_readcolor,"Items Amount:")
argo.dialog_textpos(1,3)
argo.textA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,d_def_readcolor,"Give this many items to player.")

if (<arg(editing)>)
  argo.setText(100,"<?argv(0)?>")
  argo.setText(101,"<?eval argv(1)?>")
  argo.setText(102,"<?eval argv(2)?>")
else
  argo.setText(100,"")
  argo.setText(101,"<?eval 0?>")
  argo.setText(102,"<?eval 0?>")
endif
argo.dialog_textpos(1,1)
argo.textEntryA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,250,<d_def_radek_vyska>,52,1,100)
argo.textEntryA(<lastxpos>,<lastypos>+1*<d_def_radek_vyska>,250,<d_def_radek_vyska>,52,2,101)
argo.dialog_textpos(1,2)
argo.textEntryA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,15,<d_def_radek_vyska>,52,3,102)

if (<arg(editing)>)
  argo.button(<d_def_okraj>+<d_def_skvira>,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb7,0fb9,1,0,2)	//ok
else
  argo.button(<d_def_okraj>+<d_def_skvira>,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb7,0fb9,1,0,1)	//ok
endif
argo.button(<d_def_okraj>+<d_def_skvira>+33,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb1,0fb3,1,0,0)	//cancel

[Dialog d_varGate_setAddingItem button]
on=0
dialog(d_varGate_advAddItem)

on=1	// apply changes
if !(<argTxt(1).def>)
  src.redMessage("Zadane ID neodpovida zadnemu predmetu ! Oprav jmeno itemu.")  
  dialog(d_varGate_setAddingItem,<argTxt(1)>,<eval argTxt(2)>,<eval argTxt(3)>,<eval argChk(10)>)
else
  tag(itemToAdd_<eval <tag(addItemsCount)>>,"<argTxt(1)>,<eval argTxt(2)>,<eval argTxt(3)>,0")	//ID, amount,ID/Type,GoThroughIfNotEnoughItems.
  tag(addItemsCount,#+1)
  dialog(d_varGate_advAddItem)
endif

on=2
if (<argTxt(3)> == 0) && !(<argTxt(1).def>)
  src.redMessage("Zadane ID neodpovida zadnemu predmetu ! Oprav jmeno itemu.")  
  dialog(d_varGate_setAddingItem,<argTxt(1)>,<eval argTxt(2)>,<eval argTxt(3)>,<eval argChk(10)>)
elseif (<argTxt(3)> < 0) || (<argTxt(3)> > 1)
  src.redMessage("Hodnota za jmenem odstranovaneho objektu musi byt v rozmezi 0-1 (Item,Event)")
  dialog(d_varGate_setAddingItem,<argTxt(1)>,<eval argTxt(2)>,<eval argTxt(3)>,<eval argChk(10)>)
elseif (<argTxt(2)> == 0)
  src.redMessage("Musis nastavit pocet pridavanych itemu !")
  dialog(d_varGate_setAddingItem,<argTxt(1)>,<eval argTxt(2)>,<eval argTxt(3)>,<eval argChk(10)>)
else
  tag(itemToAdd_<eval <argo.tag(thisItem)>>,"<argTxt(1)>,<eval argTxt(2)>,<eval argTxt(3)>,<eval argChk(10)>")		//ID, amount,ID/Type,GoThroughIfNotEnoughItems.
  dialog(d_varGate_advAddItem)
endif



[Dialog d_varGate_setAddingFunction]
argo.SetLocation=15,40

argo.tag(sirka,920)
argo.tag(vyska,90)
argo.dialog_prvni
argo.dialog_pozadi(<argo.tag(nexty)>,1)
argo.dialog_pozadi(<argo.tag(nexty)>,1,150,250,30)
argo.dialog_zpruhledni
if (<argvcount> > 1)
  arg(editing,1)
  argo.tag(thisFunction,<argv(4)>)
else
  arg(editing,0)
endif

argo.textA(<argo.dialog_textpos(0,0)>,42,"Variable Gate - Set Adding Function Menu")

argo.dialog_textpos(1,0)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,d_def_readcolor,"Function Name:")
argo.dialog_textpos(1,3)
argo.textA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,d_def_readcolor,"CheckBox determines, whether the function can deny entering.")

if (<arg(editing)>)
  argo.setText(100,"<?argv(0)?>")
else
  argo.setText(100,"")
endif
argo.dialog_textpos(1,1)
argo.textEntryA(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,250,<d_def_radek_vyska>,52,1,100)
argo.dialog_textpos(1,2)
if (<arg(editing)>)
  argo.checkBox(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,210,211,<argv(1)>,1)
else
  argo.checkBox(<lastxpos>,<lastypos>+0*<d_def_radek_vyska>,210,211,0,1)
endif

if (<arg(editing)>)
  argo.button(<d_def_okraj>+<d_def_skvira>,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb7,0fb9,1,0,2)	//ok
else
  argo.button(<d_def_okraj>+<d_def_skvira>,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb7,0fb9,1,0,1)	//ok
endif
argo.button(<d_def_okraj>+<d_def_skvira>+33,(<argo.tag(vyska)>-<d_def_okraj>)-23,0fb1,0fb3,1,0,0)	//cancel

[Dialog d_varGate_setAddingFunction button]
on=0
dialog(d_varGate_advAddFunction)

on=1	// apply changes
tag(functionToAdd_<eval <tag(addFunctionsCount)>>,"<argTxt(1)>,<eval argChk(1)>")	//FunctionName, CanDenyEnteringTheGate
tag(addFunctionsCount,#+1)
dialog(d_varGate_advAddFunction)

on=2
tag(functionToAdd_<eval <argo.tag(thisFunction)>>,"<argTxt(1)>,<eval argChk(1)>")		//FunctionName, CanDenyEnteringTheGate
dialog(d_varGate_advAddFunction)



[TypeDef t_varGate]
ON=@UserDClick
if (src.isGM)
  dialog(d_varGate)
  return 1
endif

ON=@Step
//	Order of following actions is very important ! So be carefull while editing...
//	Only Go Through Checking :

if (src.isGM)
  src.go(<moreP>)
  return 1
endif

if (<tag(gateFlags)>&<vg_isGuarded>)	//Gata je Guardena
  if (f_guarditAdv_CheckSpawns)	// 1 == strazce je nazivu
    src.sysMessage("Neprojdes, dokud je strazce pruchodu na zivu.")
    return 1
  endif
endif

if !(<tag(gateFlags)>&<vg_npcGoThrough>)
  if !(src.isPlayer)
    return 1
  endif
endif

if !(<tag(gateFlags)>&<vg_hypnoGoThrough>)
  if (<src.tag(hypno_mystik)>)
    src.redMessage("Tuto branu nemuzes pouzit.")
    return 1
  endif
endif

if !(<tag(gateFlags)>&<vg_ghostCanGoThrough>) && (<src.flags>&statf_dead)
  src.redMessage("Musis byt nazivu.")
  return 1
endif

if (<tag(gateFlags)>&<vg_reqLevel>)
  if (src.f_vg_gotReqLevel(<tag(reqLevel)>))
    return 1
  endif
endif

if (<tag(gateFlags)>&<vg_removeItem>)	//this removeItem cycle just determines, whether it is necessary to deny the player to go through the gate
  arg(i,0)
  while (<arg(i)> < <tag(remItemsCount)>)
    if !(f_varGate_GetSpecValue(4,<tag(itemToRemove_<eval arg(i)>)>))		//if I can not go through, without specific number of items or without existing item, which will be removed afterwards
      if (<f_varGate_GetSpecValue(3,<tag(itemToRemove_<eval arg(i)>)>)> == 2)	//searching for event
        if !(src.isevent(<f_varGate_GetSpecValue(1,<tag(itemToRemove_<eval arg(i)>)>)>))
          src.redMessage("Nejsi <src.sex(hoden,hodna)> projit dal.")
          return 1
        endif
      elseif (<src.rescount(<f_varGate_GetSpecValue(1,<tag(itemToRemove_<eval arg(i)>)>)>)> < <f_varGate_GetSpecValue(2,<tag(itemToRemove_<eval arg(i)>)>)>)		//if there is not enough items on player
        src.redMessage("Brana si zada obet, aby jsi <src.sex(mohl,mohla)> projit.")
        return 1
      endif
    endif
    arg(i,#+1)
  endwhile
endif

if (<tag(gateFlags)>&<vg_addFunction>)	//this runs only those functions, that are able to stop a player from going through the gate.
  arg(i,0)
  while (<arg(i)> < <tag(addFunctionsCount)>)
    if (f_varGate_GetSpecValue(2,<tag(functionToAdd_<eval arg(i)>)>))		//if this is function, that can stop player
      if (src.<f_varGate_GetSpecValue(1,<tag(functionToAdd_<eval arg(i)>)>)>)
        return 1
      endif
    endif
    arg(i,#+1)
  endwhile
endif



//	Only Removing Actions:

if (<tag(gateFlags)>&<vg_removeCursor>)
  src.findLayer(31).remove
endif

if (<tag(gateFlags)>&<vg_removePVPTools>)
  src.findlayer(21).contents2(f_smazat_murdoc_pvp)
endif

if (<tag(gateFlags)>&<vg_removeMount>)		// remove horse
  src.findlayer(25).remove
endif

if (<tag(gateFlags)>&<vg_removeBank>)		// remove bank box
  src.findlayer(29).remove
endif

if (<tag(gateFlags)>&<vg_removeItem>)	//this removeItem cycle is actualy removing the items
  arg(i,0)
  while (<arg(i)> < <tag(remItemsCount)>)
    var(varGate_itID,<f_varGate_GetSpecValue(1,<tag(itemToRemove_<eval arg(i)>)>)>)
    var(varGate_itCount,<f_varGate_GetSpecValue(2,<tag(itemToRemove_<eval arg(i)>)>)>)
    if (<f_varGate_GetSpecValue(3,<tag(itemToRemove_<eval arg(i)>)>)> == 2)	//searching for event
      src.events=-<varGate_itID>
    elseif (<var(varGate_itCount)> > 0)	//if there is specific amount of items to remove
      src.consume(<var(varGate_itID)>,<var(varGate_itCount)>)				//consume item from 1.st argument, the amount of consuming items is in 2.nd argument
    else
      var(varGate_itDef,<f_varGate_GetSpecValue(3,<tag(itemToRemove_<eval arg(i)>)>)>)
      src.contents2("f_varGate_removeSpecItem")
    endif
    arg(i,#+1)
  endwhile
  var(varGate_itID,"")
  var(varGate_itCount,"")
  var(varGate_itDef,"")
endif


//	Only Adding Actions:

if (<tag(gateFlags)>&<vg_addFunction>)	//this runs only those functions, that are able to stop a player from going through the gate.
  arg(i,0)
  while (<arg(i)> < <tag(addFunctionsCount)>)
    if !(f_varGate_GetSpecValue(2,<tag(functionToAdd_<eval arg(i)>)>))		//if this is function, that can NOT stop player
      src.<f_varGate_GetSpecValue(1,<tag(functionToAdd_<eval arg(i)>)>)>
    endif
    arg(i,#+1)
  endwhile
endif

if (<tag(gateFlags)>&<vg_addItem>)
  arg(i,0)
  while (<arg(i)> < <tag(addItemsCount)>)
    var(varGate_itID,<f_varGate_GetSpecValue(1,<tag(itemToAdd_<eval arg(i)>)>)>)
    var(varGate_itCount,<f_varGate_GetSpecValue(2,<tag(itemToAdd_<eval arg(i)>)>)>)
    if (<f_varGate_GetSpecValue(3,<tag(itemToAdd_<eval arg(i)>)>)> == 1)	//adding event
      src.events=+<varGate_itID>
    else
      src.giveItem(<var(varGate_itID)>,<var(varGate_itCount)>)			//give item from 1.st argument, the amount of adding items is in 2.nd argument
    endif
    arg(i,#+1)
  endwhile
  var(varGate_itID,"")
  var(varGate_itCount,"")
  var(varGate_itDef,"")
endif

if (<tag(gateFlags)>&<vg_isExpGate>)
  arg(timeToGive,<eval f_varGate_GetSpecValue(2,<tag(expToGive)>)>)
  if (<arg(timeToGive)>)
    if (<tag(hrac[<src>])> > <serv.time>)
      src.sysMessage("Jeste nemuzes dostat experience.")
    else
      tag(hrac[<src>],<eval serv.time+<arg(timeToGive)>*60*10>)
      src.addExp(<f_varGate_GetSpecValue(1,<tag(expToGive)>)>)
    endif
  else
    src.addExp(<f_varGate_GetSpecValue(1,<tag(expToGive)>)>)
  endif
endif

src.go(<moreP>)
return 1

[function f_varGate_GetSpecValue]		//argv(0) - cislo argumentu, ktery chces vratit
return<argv(<argv(0)>)>

[function f_varGate_removeSpecItem]		//argv(0) - id/type itemu, ktery se ma smazat, argv(1) - urceni, jestli jde o id nebo type
if (<var(varGate_itDef)>)
  if (<strcmpi(<var(varGate_itID)>,<type>)> == 0)
    remove
  endif
else
  if (<strcmpi(<var(varGate_itID)>,<id>)> == 0)
    remove
  endif
endif

[function f_varGate_compileItemTag]
tag(itID,<argv(0)>)
tag(itCount,<argv(1)>)
tag(itDef,<argv(2)>)
if (<argv(3)>)
  tag(itGo,1)
else
  tag(itGo,0)
endif

[Function f_vg_gotReqLevel]
if (argvcount > 1)			// required level is between two values
  if (<argv(0)> <= <argv(1)>)		// in case, the second argument is higher than the first one, The second will be ignored.
    if (<src.tag(level)> >= <argv(0)>) && (<src.tag(level)> <= <argv(1)>)
      return 0
    else
      src.redMessage("Brana te odmita.")
    endif
  elseif (src.tag(level) > <argv(0)>)
    return 0
  else
    src.redMessage("Nemas dostatek sily projit touto branou.")
  endif
elseif (src.tag(level) > <argv(0)>)	// function gets only one argument, so some players level must be higher or equal to it for the player to go through the gate ... I guess, that the previous sentence was a gramatical torture, so's this one.
  return 0
else
  src.redMessage("Nemas dostatek sily projit touto branou.")
endif
return 1

[DefNames varGate_bits]
vg_npcGoThrough			000000001	// this allows NPCs to go through the gate, if they step on it
vg_hypnoGoThrough		000000002	// this allows Mystics to go through the gate while they are controling whatever NPC
vg_ghostCanGoThrough		000000004	// this allows Ghosts to go through the gate, if the step on it
vg_isExpGate			000000008	// this gate is Expgate and so it gives experiences whenever player goes through
vg_reqLevel			000000010	// this allows onli certain levels to go through
vg_removeCursor			000000020	// this removes the cursor of the player entering the gate.
vg_removePVPTools		000000040	// this removes which ever pvp tool such as bandages, potions, jewlery and so on (except for weapons or armor)
vg_removeMount			000000080	// this removes horse 
vg_removeBank			000000100	// this removes everything inside the bankBox
vg_removeItem			000000200	// this removes certain item(s) or events, according to further specification
vg_addItem			000000400	// this adds certain item(s) or events, according to further specification
vg_addFunction			000000800	// this runs certain function on player
vg_isGuarded		000001000	// this gate is guarded
//vg_14				000002000	//
//vg_15				000004000	//
//vg_16				000008000	//
//vg_17				000010000	//
//vg_18				000020000	//
//vg_19				000040000	//
//vg_20				000080000	//
//vg_21				000100000	//
//vg_22				000200000	//
//vg_23				000400000	//
//vg_24				000800000	//
//vg_25				001000000	//
//vg_26				002000000	//
//vg_27				004000000	//
//vg_28				008000000	//
//vg_29				010000000	//
//vg_30				020000000	//
//vg_31				040000000	//
//vg_32				080000000	//

[EOF]