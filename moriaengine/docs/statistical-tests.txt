Well! So far I'm getting some very confusing results, so this file is blank until this all makes sense!

But what I've got so far is that some of my compression functions perform better with more CPU stress than others - When I have a delay of 1 MS after and before every compression function call (Well, just before we get the current time in ticks, then just after we get it again and store the difference as our result), Compress6F dominates, with 5F just behind it, and they run twice as fast as any of my functions coded in assembly. When I have no delay, and have everything running as fast as possible in a totally random order, then Compress5F does better than 6F, but Crushify8 stomps Compress5F on everything except the packets < 20 bytes or so - and I have one or two others which seem faster. I'm still tweaking, trying to figure this out, or at least figure out what I need to have to have something fast for actual real-world usage.... Probably the only way to do THAT would be to distribute different builds which use different compression functions, give them to someone running a real server, and have performance-measuring code which measures a number of things, like the amount of time spent in compression functions, the number of bytes compressed, number of packets compressed, etc.

Okay. I've made a Statistics.cs module, since I didn't like the performance-measuring stuff in .NET at all, and I've added asynchronous send/receiving to GameConn and got it randomly choosing to use sync or async, and recording stats with the Statistics module. I'll be doing something similar to compression methods after I rewrite the whole out-packet hierarchy (It's dreadfully unorganized, and difficult to use, but remarkably bug-free (when *I* use it, but nobody else is going to understand the intricacies of using it, but it CAN be made much clearer and easier and less prone to failing inexplicably if used by anyone other than me, and that's what I'm going to do)).

The plan for rewriting OutPackets and such is in docs/plans/PacketSender.

-SL