//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SteamEngine.CompiledScripts {
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using SteamEngine;
	using SteamEngine.Timers;
	using SteamEngine.Packets;
	using SteamEngine.Persistence;
	using SteamEngine.Common;
	
	
	public partial class RegenerationPluginDef : TimerPluginDef {
		
		public RegenerationPluginDef(String defname, String filename, Int32 headerLine) : 
				base(defname, filename, headerLine) {
		}
		
		protected override SteamEngine.Plugin CreateImpl() {
			return new RegenerationPlugin();
		}
		
		public new static void Bootstrap() {
			SteamEngine.PluginDef.RegisterPluginDef(typeof(RegenerationPluginDef), typeof(RegenerationPlugin));
		}
	}
	
	[SteamEngine.DeepCopyableClassAttribute()]
	[SteamEngine.Persistence.SaveableClassAttribute()]
	public partial class RegenerationPlugin : TimerPlugin {
		
		public Boolean isHitsRegen = false;
		
		public Boolean isManaRegen = false;
		
		public Boolean isStamRegen = false;
		
		[SteamEngine.DeepCopyImplementationAttribute()]
		public RegenerationPlugin(RegenerationPlugin copyFrom) : 
				base(copyFrom) {
			this.isHitsRegen = copyFrom.isHitsRegen;
			this.isManaRegen = copyFrom.isManaRegen;
			this.isStamRegen = copyFrom.isStamRegen;
		}
		
		[SteamEngine.Persistence.LoadingInitializerAttribute()]
		public RegenerationPlugin() {
		}
		
		public new RegenerationPluginDef TypeDef {
			get {
				return ((RegenerationPluginDef)(base.Def));
			}
		}
		
		[SteamEngine.Persistence.SaveAttribute()]
		public override void Save(SaveStream output) {
			if ((this.isHitsRegen != false)) {
				output.WriteValue("isHitsRegen", this.isHitsRegen);
			}
			if ((this.isManaRegen != false)) {
				output.WriteValue("isManaRegen", this.isManaRegen);
			}
			if ((this.isStamRegen != false)) {
				output.WriteValue("isStamRegen", this.isStamRegen);
			}
			base.Save(output);
		}
		
		[SteamEngine.Persistence.LoadLineAttribute()]
		public override void LoadLine(string filename, int line, string valueName, string valueString) {
			switch (valueName) {

				case "ishitsregen":
			this.isHitsRegen = SteamEngine.Common.ConvertTools.ParseBoolean(valueString);
					break;

				case "ismanaregen":
			this.isManaRegen = SteamEngine.Common.ConvertTools.ParseBoolean(valueString);
					break;

				case "isstamregen":
			this.isStamRegen = SteamEngine.Common.ConvertTools.ParseBoolean(valueString);
					break;

				default:

			base.LoadLine(filename, line, valueName, valueString);
					break;
			}
		}
	}
}
